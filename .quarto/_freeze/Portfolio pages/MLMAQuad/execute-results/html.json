{
  "hash": "73d190c73e99eda0d2816d98c33f0521",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Testing for Quadratic Effects in Multilevel Meta-Analysis\"\neditor: visual\nauthor: Matthew Swanson\ncategories: ['Multilevel Meta-Analysis', 'R', 'Quadratic Effects', 'Organizational Training', 'Engagement', 'Data Science']\nwarning: FALSE\nmessage: FALSE\nformat: \n  html: \n    page-layout: full\n---\n\n\n\n::: text-center\n# **Project Goal**\n:::\n\nAs described in the overall goal of [this project](/Portfolio%20pages/MLMAEffect.qmd), the hospital is interested in understanding what the effect they could reasonably expect to have when implementing a new teamwork training course into their workforce. Using data from previously published literature, 30 studies were identified across ten research papers. Each of these studies evaluated participant teamwork skills prior to the implementation of the training, right after the training, and several months later. I have previously demonstrated how to find the overall effect for a comparison of pre to post scores and the overall effect comparing pre to follow-up scores. However, what about a model that considers the three time points in each study? It is reasonable to expect that teamwork scores will increase right after training (as compared to pre scores) and then plateau or even weaken over time (but still remain significantly greater than pre scores). To test for this, we will have to change the shape of the data a bit and add in a quadratic term. First, I will load in the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(ez)\nlibrary(tidyr)\nlibrary(tidyverse)\nlibrary(janitor)\n\nQuadData <- read_excel(\"C:/Users/matts/OneDrive/Desktop/MLMA Quad Data.xlsx\")\nhead(QuadData)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  Study_ID Effect_ID  Mod1 Months_since_post     N Mean_pre Mean_post\n     <dbl>     <dbl> <dbl>             <dbl> <dbl>    <dbl>     <dbl>\n1        1         1     1                 0   306     3.5       5.86\n2        1         2     1                 2   306     3.5      NA   \n3        1         3     2                 0   248     2.71      5.79\n4        1         4     2                 6   248     2.71     NA   \n5        1         5     3                 0   329     2.48      3.3 \n6        1         6     3                12   329     2.48     NA   \n# ℹ 4 more variables: Mean_follow <dbl>, SD1 <dbl>, SD2 <dbl>, SD3 <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Hedges' *g*\n\nFor the sake of this example, I am going to recalculate Hedges' *g* for each of these comparisons in order to demonstrate again how to calculate meta-analytic effects using a dataset that has a slightly different set up than I have shown previously. I will also need to create the quadratic term by multiplying the number of months since the post test by itself.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set correlation = .5\nri <- .5\nQuadData$ri <- ri\n\n#compute effect size  for pre vs. post\nQuadDataPP <- escalc(measure = \"SMCR\", \n         m1i= Mean_pre, \n         m2i = Mean_post,\n         sd1i = SD1, \n         sd2i = SD2, \n         ni = N,\n        ri = ri,\n        flip = TRUE,\n        data = QuadData)\n\n#compute effect size  for pre vs. follow\nQuadDataPF <- escalc(measure = \"SMCR\", \n         m1i= Mean_pre, \n         m2i = Mean_follow,\n         sd1i = SD1, \n         sd2i = SD3, \n         ni = N,\n        ri = ri,\n        flip = TRUE,\n        data = QuadData)\n\nQuadFull <- merge(QuadDataPP, QuadDataPF, by = c('Study_ID', 'Effect_ID'), all.x = TRUE)\nQuadFull <- unite(QuadFull, yi, c(yi.x, yi.y), na.rm = TRUE)\nQuadFull <- unite(QuadFull, vi, c(vi.x, vi.y), na.rm = TRUE)\nQuadFull <- unite(QuadFull, N, c(N.x), na.rm = TRUE)\nQuadFull <- unite(QuadFull, Months_since_post, c(Months_since_post.x), na.rm = TRUE)\n\nQuadFull <- QuadFull %>%\n  mutate_at(c('yi', 'vi', 'N', 'Months_since_post'), as.numeric)\n\n#Create quadratic term\nQuadFull <- QuadFull %>%\n  mutate(Quad_Term = Months_since_post * Months_since_post)\n\nQuadFull <- QuadFull |> mutate(df = N - 1)\n\n\n#compute standard error for Cohen's d using sampling variance\nQuadFull <- QuadFull |> mutate(std_error_d = sqrt(vi / N))\n\n#convert Cohen's d to Hedges' g: effect size & standard error & variance\n\n##correction factor J\nQuadFull <- QuadFull |> mutate(j =  1 - (3 / (4 * df - 1)))\n\n##Hedges' g: effect size\nQuadFull <- QuadFull |> mutate(hedges_g =  yi * j)\n##Hedges' g: std error\nQuadFull <- QuadFull |> mutate(std_error_g =  std_error_d * j)\n#Hedges' g: variance \nQuadFull <- QuadFull |>  mutate(var_g = vi * j) \nhead(QuadFull)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Study_ID Effect_ID Mod1.x Months_since_post   N Mean_pre.x Mean_post.x\n1        1         1      1                 0 306       3.50        5.86\n2        1         2      1                 2 306       3.50          NA\n3        1         3      2                 0 248       2.71        5.79\n4        1         4      2                 6 248       2.71          NA\n5        1         5      3                 0 329       2.48        3.30\n6        1         6      3                12 329       2.48          NA\n  Mean_follow.x SD1.x SD2.x SD3.x ri.x         yi          vi Mod1.y\n1            NA  0.43  0.72    NA  0.5  5.4748632 0.052245305      1\n2          4.84  0.43    NA  1.19  0.5  3.1086088 0.019057922      1\n3            NA  1.06  0.87    NA  0.5  2.8968271 0.020950821      2\n4          3.10  1.06    NA  1.61  0.5  0.3668060 0.004303521      2\n5            NA  0.71  1.40    NA  0.5  1.1522864 0.005057392      3\n6          2.14  0.71    NA  0.88  0.5 -0.4777773 0.003386430      3\n  Months_since_post.y N.y Mean_pre.y Mean_post.y Mean_follow.y SD1.y SD2.y\n1                   0 306       3.50        5.86            NA  0.43  0.72\n2                   2 306       3.50          NA          4.84  0.43    NA\n3                   0 248       2.71        5.79            NA  1.06  0.87\n4                   6 248       2.71          NA          3.10  1.06    NA\n5                   0 329       2.48        3.30            NA  0.71  1.40\n6                  12 329       2.48          NA          2.14  0.71    NA\n  SD3.y ri.y Quad_Term  df std_error_d         j   hedges_g std_error_g\n1    NA  0.5         0 305 0.013066610 0.9975390  5.4613894 0.013034452\n2  1.19  0.5         4 305 0.007891818 0.9975390  3.1009584 0.007872396\n3    NA  0.5         0 247 0.009191252 0.9969605  2.8880221 0.009163315\n4  1.61  0.5        36 247 0.004165682 0.9969605  0.3656911 0.004153021\n5    NA  0.5         0 328 0.003920716 0.9977117  1.1496496 0.003911744\n6  0.88  0.5       144 328 0.003208286 0.9977117 -0.4766840 0.003200945\n        var_g\n1 0.052116728\n2 0.019011020\n3 0.020887141\n4 0.004290441\n5 0.005045819\n6 0.003378681\n```\n\n\n:::\n:::\n\n\n\n## Plotting Linear and Quadratic Trends\n\nI calculated Hedges' *g* for each comparison of interest and ensured that each value is read into a single dataset by using the unite function. Of course I could clean this dataset further by removing more of the duplicate columns of data that are created by combining two data frames, but for now I will move on and build a MLMA model that includes the quadratic term. The I will also plot this model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# | warning: false\n#Creating MLMA Quad Model\n\nMLMAQuad <- rma.mv(yi = hedges_g, \n                        V = var_g,\n                        mods = ~ Months_since_post + Quad_Term,\n                        random = ~ 1 | Study_ID/Effect_ID, \n                        data = QuadFull)\nMLMAQuad\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nMultivariate Meta-Analysis Model (k = 60; method: REML)\n\nVariance Components:\n\n            estim    sqrt  nlvls  fixed              factor \nsigma^2.1  0.6558  0.8098     10     no            Study_ID \nsigma^2.2  2.7679  1.6637     60     no  Study_ID/Effect_ID \n\nTest for Residual Heterogeneity:\nQE(df = 57) = 7446.3788, p-val < .0001\n\nTest of Moderators (coefficients 2:3):\nQM(df = 2) = 3.5028, p-val = 0.1735\n\nModel Results:\n\n                   estimate      se     zval    pval    ci.lb   ci.ub     \nintrcpt              1.0182  0.3867   2.6331  0.0085   0.2603  1.7761  ** \nMonths_since_post   -0.3867  0.2131  -1.8147  0.0696  -0.8044  0.0310   . \nQuad_Term            0.0333  0.0178   1.8716  0.0613  -0.0016  0.0681   . \n\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n#figure\nggplot(QuadFull, aes(x=Months_since_post, y=hedges_g)) + \n  geom_point(aes(size = N), color=\"black\", shape=21, stroke =1.5, fill=\"white\")+\n  geom_smooth(show.legend= F, color=\"#40B0A6\", method = \"lm\", formula = y~x, fill = \"#40B0A6\")+\n  geom_smooth(show.legend= F, color=\"#E1BE6A\", method = \"lm\", formula = y~poly(x,2), fill = \"#E1BE6A\")+\n  geom_hline(yintercept = 0, color = \"black\", linetype=2)+\n  coord_cartesian((xlim = c(0, 12))) +\n  theme_classic() +\n  labs(y=\"Standardized Mean Difference\", x=\"Months Since Post-Test\") +\n  theme(legend.position = \"none\",\n        axis.title.x = element_text(margin = unit(c(5, 0, 0, 0), \"mm\")),\n        axis.title.y = element_text(margin = unit(c(0, 5, 0, 0), \"mm\")),\n        axis.text.x=element_text(colour=\"black\"),\n        axis.text.y=element_text(colour=\"black\")) \n```\n\n::: {.cell-output-display}\n![](MLMAQuad_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nResults of this analysis indicates that there was no significant linear (*p* = .070) or quadratic effect (*p* = .061) of training over time. In other words, the significant improvement in training outcomes from pre to post assessment time points (as standardized mean difference) did not continue to improve over time, nor did post and follow-up time points differ from each other (when compared to pre training scores) as the quadratic trend line was not significant.\n",
    "supporting": [
      "MLMAQuad_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}